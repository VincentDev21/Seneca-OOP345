*****************************************************************************
                          Workshop - #7 (P2)
Full Name  : Vincent Le
Student ID#: 131117228
Email      : vle21@myseneca.ca
Section    : NCC
Date       : 07/16/2023

Authenticity Declaration:
I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
*****************************************************************************

During this workshop, I have learned and utilized several concepts related to the Algorithm category of the Standard Template Library (STL).
The STL function that I have used during this workshop where the sort function, that was  used to sort the crimes vector based on the specified field. 
My code contains separate if statements to sort the vector based on different fields such as "Province," "Crime," "Cases," and "Resolved."
The for_each function was used to iterate over the crimes vector and clean the list by replacing "[None]" with empty spaces (" "). 
It uses a lambda expression as the predicate to perform the cleaning operation. copy_if: The copy_if function was also used to create a new list (result) 
containing crimes from a specific province. It copies the elements from the crimes vector to the result list if the predicate (lambda expression) returns true.

The advantages of using STL Algorithms enhance code readability by providing a clear and concise way to express common operations. 
They also promote code reuse, as they are generic and can be applied to various data structures without modification. STL algorithms 
are implemented with optimized algorithms, resulting in efficient and performant code without the need for manual optimizations. 
Additionally, they improve code safety by being rigorously tested and widely used, reducing the chances of introducing bugs and errors. 
Overall, STL algorithms provide a powerful and reliable approach to handling common programming tasks.

To prevent the client from specifying an invalid field name for sorting, we can redesign the function to use an enumeration 
or an enum class instead of a string parameter. By doing so, the client would have to choose a valid field from a predefined 
set of options, ensuring that any errors or misspellings are detected by the compiler.